<launch>
  <!-- ================================================= -->
  <!--  Аргументы -->
  <!-- ================================================= -->
  <!-- выбор pipeline: ompl или chomp -->
  <arg name="pipeline" default="ompl"/>
  <!-- fake / simple / ros_control -->
  <arg name="moveit_controller_manager" default="fake"/>
  <!-- режим исполнения fake-контроллера: interpolate, via_points, last_point -->
  <arg name="fake_execution_type" default="interpolate"/>
  <!-- показывать GUI-ползунки joint_state_publisher_gui -->
  <arg name="use_gui" default="false"/>
  <!-- запуск RViz -->
  <arg name="use_rviz" default="true"/>
  <!-- грузить robot_description или нет -->
  <arg name="load_robot_description" default="true"/>

  <!-- ================================================= -->
  <!--  Статический TF world→base_link -->
  <!-- ================================================= -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster"
        args="0 0 0 0 0 0 world base_link" />

  <!-- ================================================= -->
  <!--  Демонстрационный fake-контроллер -->
  <!-- ================================================= -->
  <group if="$(eval arg('moveit_controller_manager') == 'fake')">
    <!-- Репаблишим только что созданные fake_joint_states -->
    <node name="joint_state_publisher"
          pkg="joint_state_publisher"
          type="joint_state_publisher"
          unless="$(arg use_gui)"
          output="screen">
      <rosparam param="source_list">[ "/move_group/fake_controller_joint_states" ]</rosparam>
    </node>
    <!-- GUI-ползунки, если нужно -->
    <node name="joint_state_publisher_gui"
          pkg="joint_state_publisher_gui"
          type="joint_state_publisher_gui"
          if="$(arg use_gui)"
          output="screen">
      <rosparam param="source_list">[ "/move_group/fake_controller_joint_states" ]</rosparam>
    </node>
    <!-- По этим joint_states публикуем TF -->
    <node name="robot_state_publisher"
          pkg="robot_state_publisher"
          type="robot_state_publisher"
          output="screen">
      <param name="publish_frequency" value="50.0"/>
    </node>
  </group>

  <!-- ================================================= -->
  <!--  Основной MoveIt — инклюдим move_group.launch -->
  <!-- ================================================= -->
  <include file="$(find kuka_kr10_updated_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution"  value="true"/>
    <arg name="moveit_controller_manager"   value="$(arg moveit_controller_manager)"/>
    <arg name="fake_execution_type"         value="$(arg fake_execution_type)"/>
    <arg name="pipeline"                    value="$(arg pipeline)"/>
    <arg name="load_robot_description"      value="$(arg load_robot_description)"/>
    <!-- ниже можно добавить ваши overrides, если нужно -->
  </include>

  <!-- ================================================= -->
  <!--  RViz с конфигом из вашего пакета -->
  <!-- ================================================= -->
  <!-- <include file="$(find kuka_kr10_updated_config)/launch/moveit_rviz.launch"
           if="$(arg use_rviz)">
    <arg name="rviz_config" value="$(find kuka_kr10_updated_config)/config/moveit.rviz"/>
  </include> -->
   <node name="rviz"
        pkg="rviz"
        type="rviz"
        output="screen"
        args="-d $(find kuka_kr10_updated_config)/launch/custom_moveit.rviz"/>
</launch>
